{"version":3,"sources":["webpack:///src/app/shared/file-uploader/file-uploader.directive.ts","webpack:///src/app/core/layouts/layouts.service.ts","webpack:///src/app/core/side-menus/side-menus.service.ts","webpack:///src/app/core/custom-icons/custom-icons.service.ts","webpack:///src/app/app-color-palettes.ts","webpack:///src/app/shell/image-shell/image-shell.component.ts","webpack:///src/app/shell/image-shell/image-shell.component.html","webpack:///src/app/core/layouts/mobile/mobile-layout.component.ts","webpack:///src/app/core/layouts/mobile/mobile-layout.component.html","webpack:///src/app/transloco-root.module.ts","webpack:///src/environments/environment.ts","webpack:///src/app/shell/aspect-ratio/aspect-ratio.component.ts","webpack:///src/app/shell/aspect-ratio/aspect-ratio.component.html","webpack:///src/app/shared/show-hide-password/show-hide-input.directive.ts","webpack:///src/app/core/responsive-breakpoints.service.ts","webpack:///src/app/core/side-navbar/side-navbar.component.ts","webpack:///src/app/core/side-navbar/side-navbar.component.html","webpack:///src/app/core/layouts/empty/empty-layout.component.ts","webpack:///src/app/core/layouts/empty/empty-layout.component.html","webpack:///src/app/core/top-navbar/top-navbar.component.html","webpack:///src/app/core/top-navbar/top-navbar.component.ts","webpack:///src/app/core/color-palettes/color-palettes.service.ts","webpack:///src/app/shell/config/app-shell.config.ts","webpack:///src/app/shared/notification-template/notification-template.component.ts","webpack:///src/app/shared/notification-template/notification-template.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/layouts/dynamic/dynamic-layout.component.ts","webpack:///src/app/core/layouts/dynamic/dynamic-layout.component.html","webpack:///src/app/app-layouts.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shell/shell.module.ts","webpack:///src/app/core/layouts/option-d/option-d-layout.component.ts","webpack:///src/app/core/layouts/option-d/option-d-layout.component.html","webpack:///src/app/shared/show-hide-password/show-hide-password.component.ts","webpack:///src/app/shared/show-hide-password/show-hide-password.component.html","webpack:///src/app/core/layouts/option-b/option-b-layout.component.ts","webpack:///src/app/core/layouts/option-b/option-b-layout.component.html","webpack:///src/app/core/layouts/option-c/option-c-layout.component.ts","webpack:///src/app/core/layouts/option-c/option-c-layout.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/alert-template/alert-template.component.ts","webpack:///src/app/shared/alert-template/alert-template.component.html","webpack:///src/app/core/layouts/option-a/option-a-layout.component.ts","webpack:///src/app/core/layouts/option-a/option-a-layout.component.html","webpack:///src/app/core/side-menus/main-menu/main-menu.component.html","webpack:///src/app/core/side-menus/main-menu/main-menu.component.ts","webpack:///src/app/shell/text-shell/text-shell.component.ts","webpack:///src/app/shell/text-shell/text-shell.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["FileUploaderDirective","background","allowedExtensions","filesChangeEmiter","filesInvalidEmiter","e","preventDefault","stopPropagation","files","dataTransfer","validFiles","invalidFiles","length","file","ext","name","split","lastIndexOf","push","emit","LayoutsService","previousLayout","currentLayout","switchLayoutSubject","selectedLayoutName","selectedLayout","find","layout","next","SideMenusService","toggleMainMenuSubject","toggleAltMenuSubject","renderAltMenuSubject","changeMainMenuModeSubject","CustomIconsService","matIconRegistry","domSanitizer","registerIcons","icons","path","forEach","icon","addSvgIcon","bypassSecurityTrustResourceUrl","availablePalettes","defaultPalette","palette","ImageShellComponent","platformId","debugMode","settings","debug","_src","_alt","_mode","imageLoaded","val","undefined","backgroundImage","_imageLoaded","MobileLayoutComponent","sideMenusService","responsiveBreakpointsService","layoutFlag","serverSideRendered","mainSidenavOpened","mainSideMenuMode","screenSizeChangeSubscription","screenSizeChangeSubject","pipe","subscribe","event","mainSidenavSubscription","unsubscribe","altSidenavSubscription","changeMainMenuModeSubscription","mainSidenav","toggle","open","close","error","console","log","altSidenav","menuMode","opened","altSidenavOpened","openedStart","mainSidenavToggled","altSidenavToggled","TranslocoHttpLoader","http","lang","get","baseUrl","TranslocoRootModule","provide","useValue","availableLangs","defaultLang","reRenderOnLangChange","prodMode","production","useClass","environment","AspectRatioComponent","ratioPadding","ratio","w","h","heightRatio","ShowHideInputDirective","ResponsiveBreakpointsService","breakpointObserver","isSmallScreen","isMatched","XSmall","Small","isMediumScreen","Medium","currentScreenSize","observe","Large","XLarge","result","matches","breakpoints","SideNavbarComponent","router","toggleAltMenu","toggleSettingsMenu","EmptyLayoutComponent","TopNavbarComponent","ColorPalettesService","document","currentPalette","setPalette","paletteName","selectedPalette","rootElement","documentElement","setAttribute","AppShellConfig","configFile","configSettings","toPromise","NotificationTemplateComponent","data","type","dismissible","baseClass","classes","message","snackBarRef","dismiss","SharedModule","AppComponent","layoutsService","title","mobileLayoutName","switchLayout","previousLayoutName","MOBILE_DEVICE","DynamicLayoutComponent","response","state","mobileDevice","mobileDeviceHeader","set","renderLayoutPortal","dynamicLayoutSwitchSubscription","layoutName","layoutToRender","dynamicLayoutPortal","component","availableLayouts","defaultLayout","AppModule","withServerTransition","appId","ShellModule","useFactory","appShellConfig","load","deps","multi","OptionDLayoutComponent","toggleMainMenu","ShowHidePasswordComponent","show","input","nativeElement","toggleShow","OptionBLayoutComponent","OptionCLayoutComponent","CoreModule","colorPalettesService","init","customIconsService","routes","redirectTo","pathMatch","children","loadChildren","then","m","DashboardsModule","AppRoutingModule","forRoot","onSameUrlNavigation","initialNavigation","relativeLinkResolution","AlertTemplateComponent","dialogRef","iconType","iconPosition","text","options","button","time","setTimeout","OptionALayoutComponent","MainMenuComponent","translocoService","activeLanguage","getActiveLang","availableLanguages","getAvailableLangs","setActiveLang","TextShellComponent","textLoaded","_data","addEventListener","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appFileUploader]'\r\n})\r\n\r\nexport class FileUploaderDirective {\r\n  background = '';\r\n  @Input() private allowedExtensions: Array<string> = [];\r\n  @Output() private filesChangeEmiter: EventEmitter<Array<File>> = new EventEmitter();\r\n  @Output() private filesInvalidEmiter: EventEmitter<Array<File>> = new EventEmitter();\r\n\r\n  @HostListener('drop', ['$event']) onDrop(e): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const files = e.dataTransfer.files;\r\n    const validFiles: Array<File> = [];\r\n    const invalidFiles: Array<File> = [];\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const ext = file.name.split('.')[file.name.split('.').length - 1];\r\n        if (\r\n          (!this.allowedExtensions.length) ||\r\n          (this.allowedExtensions.lastIndexOf(ext) !== -1)\r\n        ) {\r\n          validFiles.push(file);\r\n        } else {\r\n          invalidFiles.push(file);\r\n        }\r\n      }\r\n      if (validFiles.length > 0) {\r\n        this.filesChangeEmiter.emit(validFiles);\r\n      }\r\n      if (invalidFiles.length > 0) {\r\n        this.filesInvalidEmiter.emit(invalidFiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(e): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { defaultLayout, availableLayouts, IAppLayout } from 'src/app/app-layouts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutsService {\n  previousLayout: IAppLayout = defaultLayout;\n  currentLayout: IAppLayout = defaultLayout;\n\n  public switchLayoutSubject: Subject<any> = new Subject();\n\n  constructor() { }\n\n  switchLayout(selectedLayoutName: string): void {\n    selectedLayoutName = (selectedLayoutName) ? selectedLayoutName : this.currentLayout.name;\n\n    if (selectedLayoutName && selectedLayoutName !== this.currentLayout.name) {\n      const selectedLayout: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n        return layout.name === selectedLayoutName;\n      });\n\n      if (selectedLayout) {\n        this.previousLayout = this.currentLayout;\n        this.currentLayout = selectedLayout;\n\n        this.switchLayoutSubject.next(selectedLayout.name);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenusService {\n  public toggleMainMenuSubject: Subject<any> = new Subject();\n\n  public toggleAltMenuSubject: Subject<any> = new Subject();\n  public renderAltMenuSubject: Subject<any> = new Subject();\n\n  public changeMainMenuModeSubject: Subject<any> = new Subject();\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomIconsService {\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {}\n\n  init(): void {\n    // register custom icons\n    this.registerIcons(\n      ['comparating-logo-2', 'comparating-logo'], '/assets/icons/logos/');\n    this.registerIcons(\n      ['dashboards', 'forms', 'components', 'charts', 'tables', 'utilities'], '/assets/icons/sidemenu/');\n  }\n\n  registerIcons(icons: Array<string>, path: string) {\n    icons.forEach((icon) => {\n      this.matIconRegistry.addSvgIcon(\n        icon,\n        this.domSanitizer.bypassSecurityTrustResourceUrl(path + icon + '.svg')\n      );\n    });\n  }\n}\n","interface IPalette {\n  name: string;\n}\n\nconst availablePalettes: Array<IPalette> = [\n  {\n    name: 'palette-1'\n  },\n  {\n    name: 'palette-2'\n  }\n];\n\n// select the default color palette\nconst defaultPalette: IPalette = availablePalettes.find((palette: IPalette) => {\n  return palette.name === 'palette-1';\n});\n\nexport { IPalette, availablePalettes, defaultPalette };\n","import { Component, Input, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\nimport { AppShellConfig } from '../config/app-shell.config';\r\n\r\n@Component({\r\n  selector: 'cc-image-shell',\r\n  templateUrl: './image-shell.component.html',\r\n  styleUrls: ['./image-shell.component.scss']\r\n})\r\nexport class ImageShellComponent {\r\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\r\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  _src = '';\r\n  // tslint:disable-next-line:variable-name\r\n  _alt = '';\r\n  // tslint:disable-next-line:variable-name\r\n  _mode = '';\r\n\r\n  @HostBinding('class.img-loaded') imageLoaded = false;\r\n\r\n  @HostBinding('style.backgroundImage') backgroundImage: string;\r\n\r\n  @HostBinding('attr.mode')\r\n  @Input()\r\n  set mode(val: string) {\r\n    this._mode = (val !== undefined && val !== null) ? val : '';\r\n  }\r\n  get mode(): string {\r\n    return this._mode;\r\n  }\r\n\r\n  @Input()\r\n  set src(val: string) {\r\n    if (!this.debugMode) {\r\n      this._src = (val !== undefined && val !== null) ? val : '';\r\n    }\r\n\r\n    if (this._mode === 'cover') {\r\n      // Unset the background-image\r\n      this.backgroundImage = 'unset';\r\n    }\r\n\r\n    // Show loading indicator\r\n    // When using SSR (Server Side Rendering), avoid the loading animation while the image resource is being loaded\r\n    if (isPlatformServer(this.platformId)) {\r\n      this.imageLoaded = true;\r\n    } else {\r\n      this.imageLoaded = false;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set alt(val: string) {\r\n    this._alt = (val !== undefined && val !== null) ? val : '';\r\n  }\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId\r\n  ) {}\r\n\r\n  _imageLoaded() {\r\n    this.imageLoaded = true;\r\n\r\n    // If it's a cover image then set the background-image property accordingly\r\n    if (this._mode === 'cover') {\r\n      this.backgroundImage = 'url(' + this._src + ')';\r\n    }\r\n  }\r\n}\r\n","<i class=\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\"></i>\r\n<img class=\"inner-img\" [src]=\"_src\" [alt]=\"_alt\" (load)=\"_imageLoaded()\"/>\r\n<ng-content *ngIf=\"_mode === 'cover'\"></ng-content>\r\n","import { Component, OnInit, AfterViewInit, OnDestroy, HostBinding, ViewChild, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-mobile-layout',\n  templateUrl: './mobile-layout.component.html',\n  styleUrls: ['./mobile-layout.component.scss']\n})\nexport class MobileLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-mobile') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // Mobile layout main menu always starts closed and with 'push' mode\n    this.mainSidenavOpened = false;\n    this.mainSideMenuMode = 'push';\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('toggleMainMenu [Layout Mobile] - complete');\n      }\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('toggleAltMenu [Layout Mobile] - complete');\n      }\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('changeMainMenuModeSubject [Layout Mobile] - complete');\n      }\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding\" mode=\"condensed\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`${environment.baseUrl}/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en','ru'],\n        defaultLang: 'ru',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  baseUrl: './',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cc-aspect-ratio',\r\n  templateUrl: './aspect-ratio.component.html',\r\n  styleUrls: ['./aspect-ratio.component.scss']\r\n})\r\nexport class AspectRatioComponent {\r\n  @HostBinding('style.padding') ratioPadding = '0px';\r\n\r\n  @Input()\r\n  set ratio(ratio: { w: number, h: number }) {\r\n    ratio = (ratio !== undefined && ratio !== null) ? ratio : {w: 1, h: 1};\r\n\r\n    const heightRatio = (ratio.h / ratio.w * 100) + '%';\r\n\r\n    // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)\r\n    this.ratioPadding = '0px 0px ' + heightRatio + ' 0px';\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","<div class=\"content-wrapper\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appShowHideInput]'\r\n})\r\nexport class ShowHideInputDirective {\r\n\r\n  constructor() {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiveBreakpointsService {\n  public screenSizeChangeSubject: ReplaySubject<any> = new ReplaySubject(1);\n  public currentScreenSize: string;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver\n  ) {\n    const isSmallScreen = this.breakpointObserver.isMatched(\n      [Breakpoints.XSmall, Breakpoints.Small]\n    );\n    const isMediumScreen = this.breakpointObserver.isMatched(\n      [Breakpoints.Medium]\n    );\n\n    this.currentScreenSize = (isSmallScreen) ? 'small' : (isMediumScreen) ? 'medium' : 'large';\n\n    // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n    this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge\n    ]).subscribe(result => {\n      if (result.matches) {\n        if (result.breakpoints[Breakpoints.XSmall] || result.breakpoints[Breakpoints.Small]) {\n          this.screenSizeChangeSubject.next('small');\n        }\n\n        if (result.breakpoints[Breakpoints.Medium]) {\n          this.screenSizeChangeSubject.next('medium');\n        }\n\n        if (result.breakpoints[Breakpoints.Large] || result.breakpoints[Breakpoints.XLarge]) {\n          this.screenSizeChangeSubject.next('large');\n        }\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SideMenusService } from '../side-menus/side-menus.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-side-navbar',\n  templateUrl: './side-navbar.component.html',\n  styleUrls: [\n    './styles/side-navbar.component.scss'\n  ]\n})\nexport class SideNavbarComponent implements OnInit {\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n  }\n\n  toggleAltMenu(): void {\n    this.sideMenusService.toggleAltMenuSubject.next('toggle');\n  }\n\n  toggleSettingsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('settings');\n    this.toggleAltMenu();\n  }\n\n  toggleNotificationsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('notifications');\n    this.toggleAltMenu();\n  }\n\n  toggleSearchMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('search');\n    this.toggleAltMenu();\n  }\n}\n","<div class=\"navbar-branding\">\n  <mat-icon class=\"brand-logo\" svgIcon=\"comparating-logo\"></mat-icon>\n</div>\n<div class=\"navbar-actions\">\n  <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleSettingsMenu()\">\n    <mat-icon class=\"navbar-icons\" svgIcon=\"settings\"></mat-icon>\n  </button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styleUrls: ['./empty-layout.component.scss']\n})\nexport class EmptyLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","<!-- Conditional template Outlet (see: https://stackoverflow.com/a/52448001/1116959) -->\n<ng-container *ngTemplateOutlet=\"(_mode === 'condensed') ? condensedToolbar : expandedToolbar;\">\n</ng-container>\n\n<ng-template #condensedToolbar>\n  <mat-toolbar class=\"top-navbar-toolbar\" *transloco=\"let t\">\n    <mat-toolbar-row>\n      <div class=\"navbar-branding\">\n        <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n          <i class=\"fa fa-bars\"></i>\n        </button>\n      </div>\n      <span class=\"navbar-title\">Comparating</span>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</ng-template>\n\n<ng-template #expandedToolbar>\n  <mat-toolbar class=\"top-navbar-toolbar\">\n    <mat-toolbar-row>\n      <div class=\"navbar-branding\">\n        <mat-icon class=\"brand-logo\" svgIcon=\"comparating-logo-2\"></mat-icon>\n        <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n          <i class=\"fa fa-bars\"></i>\n        </button>\n        <span class=\"navbar-title\">{{ 'title' | transloco}}</span>\n      </div>\n\n      <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleNotificationsMenu()\"></button>\n      <div class=\"navbar-controls\">\n        <div class=\"navbar-search d-none d-md-block\">\n          <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleNotificationsMenu()\"></button>\n        </div>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</ng-template>","import { Component, OnInit, HostBinding, Input } from '@angular/core';\nimport { SideMenusService } from '../side-menus/side-menus.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-top-navbar',\n  templateUrl: './top-navbar.component.html',\n  styleUrls: [\n    './styles/top-navbar.component.scss'\n  ]\n})\nexport class TopNavbarComponent implements OnInit {\n\n  // tslint:disable-next-line:variable-name\n  _mode = 'expanded';\n\n  @HostBinding('attr.mode')\n  @Input()\n  set mode(val: string) {\n    this._mode = (val !== undefined && val !== null) ? val : 'expanded';\n  }\n  get mode(): string {\n    return this._mode;\n  }\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {}\n\n  logout() {\n  }\n\n  toggleMainMenu(): void {\n    this.sideMenusService.toggleMainMenuSubject.next('toggle');\n  }\n\n  toggleAltMenu(): void {\n    this.sideMenusService.toggleAltMenuSubject.next('toggle');\n  }\n\n  toggleSettingsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('settings');\n    this.toggleAltMenu();\n  }\n\n  toggleNotificationsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('notifications');\n    this.toggleAltMenu();\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { defaultPalette, IPalette, availablePalettes } from 'src/app/app-color-palettes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorPalettesService {\n  currentPalette: IPalette = defaultPalette;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  init(): void {\n    this.setPalette(defaultPalette.name);\n  }\n\n  setPalette(paletteName: string): void {\n    // Set default theme\n    const selectedPalette: IPalette = availablePalettes.find((palette: IPalette) => {\n      return palette.name === paletteName;\n    });\n\n    if (selectedPalette) {\n      const rootElement = this.document.documentElement;\n\n      if (rootElement) {\n        rootElement.setAttribute('color-palette', selectedPalette.name);\n      }\n\n      this.currentPalette = selectedPalette;\n    }\n  }\n}\n","// Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\r\nimport { Injectable, isDevMode } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { tap } from 'rxjs/operators';\r\nimport { IAppShellConfig } from './config.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppShellConfig {\r\n  static settings: IAppShellConfig;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Simplified version from: https://stackoverflow.com/a/49707898/1116959\r\n  load(): Promise<void | IAppShellConfig> {\r\n    const configFile = '/assets/config/app-shell.config' + ((!isDevMode()) ? '.prod' : '') + '.json';\r\n\r\n    return this.http.get<IAppShellConfig>(configFile).pipe(\r\n      tap(configSettings => {\r\n        AppShellConfig.settings = configSettings;\r\n      })\r\n    )\r\n    .toPromise()\r\n    .catch((error: any) => {\r\n      console.log(`Could not load file '${configFile}'`, error);\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject, Input, OnInit, Optional } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-notification-template',\r\n  templateUrl: './notification-template.component.html',\r\n  styleUrls: ['./notification-template.component.scss']\r\n})\r\n\r\nexport class NotificationTemplateComponent implements OnInit {\r\n  @Input() message: string;\r\n  @Input() text: string;\r\n  @Input() icon: string;\r\n  @Input() type = false;\r\n  @Input() dismissible = false;\r\n\r\n  baseClass = 'notification alert';\r\n  classes = '';\r\n\r\n  /** The instance of the component making up the content of the snack bar. */\r\n  snackBarRef: MatSnackBarRef<NotificationTemplateComponent>;\r\n\r\n  constructor(@Optional() @Inject(MAT_SNACK_BAR_DATA) public data: any) {\r\n    if (data) {\r\n      this.message = data.message;\r\n      this.icon = data.icon;\r\n      this.type = data.type;\r\n      this.dismissible = data.dismissible;\r\n    }\r\n  }\r\n\r\n  /** Dismisses the snack bar. */\r\n  dismiss(): void {\r\n    if (this.snackBarRef) {\r\n      this.snackBarRef.dismiss();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.classes = this.baseClass;\r\n    this.classes += (this.dismissible ? ' alert-dismissible' :  '');\r\n    this.classes += (this.type ? ' alert-' + this.type :  '');\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <div class=\"custom-notification-wrapper\">\r\n    <div role=\"alert\" [ngClass]=\"classes\">\r\n      <i *ngIf=\"icon\" [ngClass]=\"'notification-icon fas fa-' + icon\"></i>\r\n      <span *ngIf=\"message\" class=\"notification-line\">{{ message }}</span>\r\n      <button type=\"button\" class=\"close\" *ngIf=\"dismissible\" (click)=\"dismiss()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n      <p *ngIf=\"text\" class=\"notification-text\">{{ text }}</p>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport {\r\n  NgbButtonsModule,\r\n  NgbProgressbarModule,\r\n  NgbDatepickerModule,\r\n  NgbRatingModule,\r\n  NgbTimepickerModule,\r\n  NgbPopoverModule,\r\n  NgbCarouselModule,\r\n  NgbTabsetModule,\r\n  NgbTypeaheadModule,\r\n  NgbDropdownModule\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// import { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ShellModule } from '../shell/shell.module';\r\nimport { FileUploaderDirective } from './file-uploader/file-uploader.directive';\r\nimport { ShowHidePasswordComponent } from './show-hide-password/show-hide-password.component';\r\nimport { ShowHideInputDirective } from './show-hide-password/show-hide-input.directive';\r\nimport { AlertTemplateComponent } from './alert-template/alert-template.component';\r\nimport { NotificationTemplateComponent } from './notification-template/notification-template.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileUploaderDirective,\r\n    ShowHidePasswordComponent,\r\n    ShowHideInputDirective,\r\n    AlertTemplateComponent,\r\n    NotificationTemplateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ShellModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n    // HttpClientModule\r\n  ],\r\n  exports: [\r\n    // Re-export these modules to prevent repeated imports (see: https://angular.io/guide/ngmodule#re-exporting-other-modules)\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // HttpClientModule,\r\n    ShellModule,\r\n    RouterModule,\r\n    FileUploaderDirective,\r\n    ShowHidePasswordComponent,\r\n    ShowHideInputDirective,\r\n    AlertTemplateComponent,\r\n    NotificationTemplateComponent,\r\n    // angular material modules\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatProgressBarModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatSliderModule,\r\n    MatIconModule,  // needed to use the MatIconRegistry to register our own icons\r\n    // ng bootstrap modules\r\n    NgbButtonsModule,\r\n    NgbProgressbarModule,\r\n    NgbDatepickerModule,\r\n    NgbRatingModule,\r\n    NgbTimepickerModule,\r\n    NgbPopoverModule,\r\n    NgbCarouselModule,\r\n    NgbTabsetModule,\r\n    NgbTypeaheadModule,\r\n    NgbDropdownModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { LayoutsService } from './core/layouts/layouts.service';\nimport { translate, TranslocoService, Translation } from '@ngneat/transloco';\nimport { subscribeOn } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'comparating-template';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private breakpointObserver: BreakpointObserver,\n    private layoutsService: LayoutsService,\n  ) { }\n  ngOnInit() {\n    // Listen to device size changes to dynamically adjust the layout\n    if (isPlatformBrowser(this.platformId)) {\n      // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n      this.breakpointObserver.observe([\n        Breakpoints.XSmall\n      ]).subscribe(result => {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          // Switch to mobile layout\n          const mobileLayoutName = 'mobile';\n          this.layoutsService.switchLayout(mobileLayoutName);\n        } else {\n          // Switch back to previous layout (or the default one)\n          const previousLayoutName = this.layoutsService.previousLayout.name;\n          this.layoutsService.switchLayout(previousLayoutName);\n        }\n      });\n    }\n  }\n}\n","<ng-container *transloco=\"let t\">\n<router-outlet></router-outlet>\n</ng-container>\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, Inject, PLATFORM_ID, Optional } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\nimport { RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { CdkPortalOutlet, Portal, ComponentPortal } from '@angular/cdk/portal';\nimport { Subscription } from 'rxjs';\n\nimport { LayoutsService } from '../layouts.service';\nimport { IAppLayout, availableLayouts, defaultLayout } from 'src/app/app-layouts';\n\nconst MOBILE_DEVICE = makeStateKey('mobile-device');\n\n@Component({\n  selector: 'app-dynamic-layout',\n  templateUrl: './dynamic-layout.component.html'\n})\nexport class DynamicLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  // dynamicLayoutPortalOutlet is a reference to the <ng-template> in the view that's gonna render the different layouts\n  @ViewChild(CdkPortalOutlet) dynamicLayoutPortalOutlet: CdkPortalOutlet;\n\n  // dynamicLayoutPortal is a reference to the portal that we are gonna render in the dynamicLayoutPortalOutlet\n  dynamicLayoutPortal: Portal<any>;\n\n  // Subscription to the Dynamic Layout switching mechanism\n  dynamicLayoutSwitchSubscription: Subscription;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Optional() @Inject(RESPONSE) private response: any,\n    private state: TransferState,\n    private layoutsService: LayoutsService\n  ) {\n    // Check if the user is requesting the app from a mobile device\n    let mobileDevice = 'not-mobile';\n\n    // In our server.ts we added a custom response header with information about the device requesting the app\n    if (isPlatformServer(this.platformId)) {\n      if (this.response && this.response !== null) {\n        // Get custom header from the response sent from the server.ts\n        const mobileDeviceHeader = this.response.get('mobile-device');\n\n        // If the mobile-device header is not null, then the user is requesting the app from a mobile device. Override reference.\n        if (mobileDeviceHeader && mobileDeviceHeader !== 'null') {\n          mobileDevice = mobileDeviceHeader;\n        }\n      }\n\n      // Set the mobileDevice reference using Angular TransferState mechanisms so we can have this reference ready\n      // when the app transitions from server side rendering to client side rendering\n      this.state.set(MOBILE_DEVICE, mobileDevice as string);\n\n      console.log('we\\'re rendering from the server, checking response object.');\n      console.log(`MOBILE_DEVICE from RESPONSE: ${mobileDevice}`);\n    } else {\n      mobileDevice = this.state.get(MOBILE_DEVICE, mobileDevice as any);\n\n      console.log('we\\'re rendering from the browser, there is no response object.');\n      console.log(`MOBILE_DEVICE from TransferState: ${mobileDevice}`);\n    }\n\n    if (mobileDevice !== 'not-mobile') {\n      this.renderLayoutPortal('mobile');\n    } else {\n      this.renderLayoutPortal(defaultLayout.name);\n    }\n  }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    this.dynamicLayoutSwitchSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.dynamicLayoutSwitchSubscription = this.layoutsService.switchLayoutSubject.subscribe(\n      (selectedLayoutName) => {\n        this.renderLayoutPortal(selectedLayoutName);\n      },\n      (error) => {\n        console.log('switchLayoutSubject [DynamicLayoutComponent] - error', error);\n      },\n      () => {\n        console.log('switchLayoutSubject [DynamicLayoutComponent] - complete');\n      }\n    );\n  }\n\n  renderLayoutPortal(layoutName: string): void {\n    // Check if the layout we want to render exists. We check against the list defined in the src/app-layouts.ts file\n    const layoutToRender: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n      return layout.name === layoutName;\n    });\n\n    if (layoutToRender) {\n      this.dynamicLayoutPortal = new ComponentPortal(layoutToRender.component);\n    }\n  }\n}\n","<ng-template [cdkPortalOutlet]=\"dynamicLayoutPortal\"></ng-template>\n","import { Type } from '@angular/core';\n\nimport { OptionALayoutComponent } from './core/layouts/option-a/option-a-layout.component';\nimport { OptionBLayoutComponent } from './core/layouts/option-b/option-b-layout.component';\nimport { OptionCLayoutComponent } from './core/layouts/option-c/option-c-layout.component';\nimport { OptionDLayoutComponent } from './core/layouts/option-d/option-d-layout.component';\nimport { MobileLayoutComponent } from './core/layouts/mobile/mobile-layout.component';\n\ninterface IAppLayout {\n  name: string;\n  component: Type<any>;\n}\n\nconst availableLayouts: Array<IAppLayout> = [\n  {\n    name: 'A',\n    component: OptionALayoutComponent\n  },\n  {\n    name: 'B',\n    component: OptionBLayoutComponent\n  },\n  {\n    name: 'C',\n    component: OptionCLayoutComponent\n  },\n  {\n    name: 'D',\n    component: OptionDLayoutComponent\n  },\n  {\n    name: 'mobile',\n    component: MobileLayoutComponent\n  }\n];\n\n// Select the default layout\nconst defaultLayout: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n  return layout.name === 'B';\n});\n\nexport { IAppLayout, availableLayouts, defaultLayout };\n","import { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslocoRootModule } from './transloco-root.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    BrowserTransferStateModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    CoreModule,\r\n    BrowserAnimationsModule,\r\n    TranslocoRootModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AspectRatioComponent } from './aspect-ratio/aspect-ratio.component';\r\nimport { ImageShellComponent } from './image-shell/image-shell.component';\r\nimport { TextShellComponent } from './text-shell/text-shell.component';\r\nimport { AppShellConfig } from './config/app-shell.config';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AspectRatioComponent,\r\n    ImageShellComponent,\r\n    TextShellComponent\r\n  ],\r\n  providers: [\r\n    // Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (appShellConfig: AppShellConfig) => {\r\n        return () => appShellConfig.load();\r\n      },\r\n      deps: [AppShellConfig],\r\n      multi: true\r\n    }\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AspectRatioComponent,\r\n    ImageShellComponent,\r\n    TextShellComponent\r\n  ]\r\n})\r\nexport class ShellModule { }\r\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-d-layout',\n  templateUrl: './option-d-layout.component.html',\n  styleUrls: ['./option-d-layout.component.scss']\n})\nexport class OptionDLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-d') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(platformId);\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout D] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout D] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout D] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  toggleMainMenu(): void {\n    this.sideMenusService.toggleMainMenuSubject.next('toggle');\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<!-- Multi sidenav layouts, see: https://github.com/angular/components/issues/1514#issuecomment-306778354 -->\n<mat-sidenav-container>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"start\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div class=\"layout-container\">\n      <div class=\"side-navbar-container\">\n        <app-side-navbar class=\"admin-side-navbar\"></app-side-navbar>\n      </div>\n      <div class=\"drawer-container\">\n        <mat-sidenav-container>\n          <mat-sidenav\n            class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n            #mainSidenav\n            [mode]=\"mainSideMenuMode\"\n            [opened]=\"mainSidenavOpened\"\n            position=\"start\"\n            (openedStart)=\"openedStart()\"\n            (openedChange)=\"mainSidenavToggled($event)\">\n            <app-main-menu class=\"use-active-item-dot-decoration\"></app-main-menu>\n          </mat-sidenav>\n          <mat-sidenav-content class=\"admin-main-content\">\n            <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n              <i class=\"fa fa-bars\"></i>\n            </button>\n            <router-outlet></router-outlet>\n          </mat-sidenav-content>\n        </mat-sidenav-container>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, ContentChild, ElementRef } from '@angular/core';\r\nimport { ShowHideInputDirective } from './show-hide-input.directive';\r\n\r\n@Component({\r\n  selector: 'app-show-hide-password',\r\n  templateUrl: './show-hide-password.component.html',\r\n  styleUrls: ['./show-hide-password.component.scss']\r\n})\r\nexport class ShowHidePasswordComponent {\r\n\r\n  show = false;\r\n  @ContentChild(ShowHideInputDirective, { read: ElementRef }) input: ElementRef;\r\n\r\n  constructor() {}\r\n\r\n  toggleShow() {\r\n    this.show = !this.show;\r\n    if (this.show) {\r\n      this.input.nativeElement.type = 'text';\r\n    } else {\r\n      this.input.nativeElement.type = 'password';\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>\r\n<a class=\"type-toggle\" (click)=\"toggleShow()\">\r\n\t<i class=\"fas fa-eye show-option\" [hidden]=\"show\"></i>\r\n\t<i class=\"fas fa-eye-slash hide-option\" [hidden]=\"!show\"></i>\r\n  <!-- In case you want to use text instead of icons -->\r\n\t<!--\r\n  <span class=\"show-option\" [hidden]=\"show\">show</span>\r\n\t<span class=\"hide-option\" [hidden]=\"!show\">hide</span>\r\n  -->\r\n</a>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy, HostBinding, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-b-layout',\n  templateUrl: './option-b-layout.component.html',\n  styleUrls: ['./option-b-layout.component.scss']\n})\nexport class OptionBLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-b') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout B] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout B] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout B] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding add-user-divider\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-c-layout',\n  templateUrl: './option-c-layout.component.html',\n  styleUrls: ['./option-c-layout.component.scss']\n})\nexport class OptionCLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-c') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout C] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout C] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout C] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  // For the closing event, just wait until is fully closed and the animation ended\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding add-user-divider\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\n// Items inside Side Menu\nimport { MatExpansionModule } from '@angular/material/expansion';\n// Side Menu\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { PortalModule } from '@angular/cdk/portal';\n\n// Top Navbar\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OptionALayoutComponent } from './layouts/option-a/option-a-layout.component';\nimport { OptionBLayoutComponent } from './layouts/option-b/option-b-layout.component';\nimport { OptionCLayoutComponent } from './layouts/option-c/option-c-layout.component';\nimport { OptionDLayoutComponent } from './layouts/option-d/option-d-layout.component';\nimport { EmptyLayoutComponent } from './layouts/empty/empty-layout.component';\n\nimport { TopNavbarComponent } from './top-navbar/top-navbar.component';\nimport { SideNavbarComponent } from './side-navbar/side-navbar.component';\nimport { MainMenuComponent } from './side-menus/main-menu/main-menu.component';\n\nimport { ColorPalettesService } from './color-palettes/color-palettes.service';\nimport { CustomIconsService } from './custom-icons/custom-icons.service';\nimport { MobileLayoutComponent } from './layouts/mobile/mobile-layout.component';\nimport { DynamicLayoutComponent } from './layouts/dynamic/dynamic-layout.component';\nimport { TranslocoRootModule } from '../transloco-root.module';\n\n@NgModule({\n  declarations: [\n    OptionALayoutComponent,\n    OptionBLayoutComponent,\n    OptionCLayoutComponent,\n    OptionDLayoutComponent,\n    EmptyLayoutComponent,\n    TopNavbarComponent,\n    SideNavbarComponent,\n    MainMenuComponent,\n\n    MobileLayoutComponent,\n    DynamicLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    // Material CDK modules\n    PortalModule,\n    // To detect screen size changes\n    LayoutModule,\n    // Material modules\n    MatSidenavModule,\n    MatExpansionModule,\n    // Ng Bootstrap modules\n    NgbDropdownModule,\n    TranslocoRootModule\n  ],\n  exports: [\n    OptionALayoutComponent,\n    OptionBLayoutComponent,\n    OptionCLayoutComponent,\n    OptionDLayoutComponent,\n    EmptyLayoutComponent,\n    TopNavbarComponent,\n    SideNavbarComponent,\n    MainMenuComponent,\n    MobileLayoutComponent,\n    DynamicLayoutComponent\n  ],\n  providers: [\n    // Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (colorPalettesService: ColorPalettesService) => {\n        return () => colorPalettesService.init();\n      },\n      deps: [ColorPalettesService],\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (customIconsService: CustomIconsService) => {\n        return () => customIconsService.init();\n      },\n      deps: [CustomIconsService],\n      multi: true\n    }\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nimport { EmptyLayoutComponent } from './core/layouts/empty/empty-layout.component';\nimport { DynamicLayoutComponent } from './core/layouts/dynamic/dynamic-layout.component';\n\nconst routes: Routes = [\n  /*\n    Default route\n  */\n  { path: '', redirectTo: '/comparator', pathMatch: 'full' },\n  /*\n    Main routes + dynamic layouts\n  */\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./dashboards/dashboards.module').then(m => m.DashboardsModule)\n      }\n    ]\n  },\n  /*\n    Undefined routes (should redirect to a 404 page)\n  */\n  { path: '**', redirectTo: '/comparator' }\n];\n\n@NgModule({\n  // Only call RouterModule.forRoot() in the root AppRoutingModule (or the AppModule if that's where you register\n  // top level application routes). In any other module, you must call the RouterModule.forChild method to register additional routes.\n  imports: [\n    RouterModule.forRoot(routes, {\n    // If you want to preload all lazy routes when the app loads, uncomment the following line\n    // preloadingStrategy: PreloadAllModules,\n    onSameUrlNavigation: 'reload',\n    // This value is required for server-side rendering to work.\n    initialNavigation: 'enabled',\n    relativeLinkResolution: 'legacy'\n})\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-alert-template-component',\r\n  templateUrl: 'alert-template.component.html',\r\n  styleUrls: ['./alert-template.component.scss']\r\n})\r\nexport class AlertTemplateComponent {\r\n  iconType: string;\r\n  iconPosition: string;\r\n  title: string;\r\n  text: string;\r\n  options: false;\r\n  input: false;\r\n  button: string;\r\n  inputData: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertTemplateComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.iconType = data.iconType;\r\n    this.iconPosition = data.iconPosition ? data.iconPosition : 'default';\r\n    this.title = data.title;\r\n    this.text = data.text;\r\n    this.options = data.options;\r\n    this.input = data.input;\r\n    this.button = data.button;\r\n\r\n    if (data.time) {\r\n      setTimeout(() => {\r\n        this.dialogRef.close();\r\n      }, data.time);\r\n    }\r\n  }\r\n}\r\n","<div class=\"alert-modal\">\r\n\r\n  <div *ngIf=\"iconType\" class=\"icon-container-wrapper\">\r\n    <cc-aspect-ratio [ratio]=\"{w:1, h:1}\" class=\"icon-background\" [ngClass]=\"iconType + ' icon-' + iconPosition\">\r\n      <div class=\"icon-container\">\r\n        <i *ngIf=\"iconType === 'success'\" class=\"fas fa-check alert-icon icon-success\"></i>\r\n        <i *ngIf=\"iconType === 'error'\" class=\"fas fa-exclamation alert-icon icon-error\"></i>\r\n      </div>\r\n    </cc-aspect-ratio>\r\n  </div>\r\n\r\n  <span class=\"alert-title\">{{ title }}</span>\r\n  <span class=\"alert-text\">{{ text }}</span>\r\n\r\n  <div *ngIf=\"input\" class=\"alert-with-input\">\r\n    <input class=\"form-control\" [(ngModel)]=\"inputData\">\r\n    <div class=\"alert-buttons\" *ngIf=\"input\">\r\n      <button type=\"button\" class=\"button-success\" [mat-dialog-close]=\"inputData\">Confirm</button>\r\n      <button type=\"button\" class=\"button-error\" [mat-dialog-close]=\"false\">Cancel</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"!input && options\" class=\"alert-buttons\">\r\n    <button type=\"button\" class=\"button-success\" [mat-dialog-close]=\"true\">Yes</button>\r\n    <button type=\"button\" class=\"button-error\" [mat-dialog-close]=\"false\">No</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"!input && !options && button\" class=\"alert-buttons\">\r\n    <button type=\"button\" class=\"button-info\" [mat-dialog-close]=\"false\">{{ button }}</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-a-layout',\n  templateUrl: './option-a-layout.component.html',\n  styleUrls: ['./option-a-layout.component.scss']\n})\nexport class OptionALayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-a') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout A] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout A] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout B] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<app-top-navbar class=\"admin-top-navbar show-full-branding add-actions-divider\"></app-top-navbar>\n<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"use-active-item-dot-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","<ng-container *transloco=\"let t\">\n<div class=\"side-menu-branding\">\n  <mat-icon class=\"brand-logo\" svgIcon=\"comparating-logo\"></mat-icon>\n  <span class=\"menu-item-title\">Comparating</span>\n</div>\n<ul class=\"side-menu-navigation nav flex-column\">\n  <li class=\"menu-item expandable-item nav-item\" [routerLinkActive]=\"['active']\">\n    <mat-expansion-panel [expanded]=\"true\">\n      <mat-expansion-panel-header class=\"menu-link\">\n        <div class=\"item-header-content\">\n          <mat-panel-title>\n            <mat-icon class=\"menu-item-icon\" svgIcon=\"dashboards\"></mat-icon>\n            <span class=\"menu-item-title\">\n              {{ t('dashboard') }}</span>\n          </mat-panel-title>\n        </div>\n      </mat-expansion-panel-header>\n      <ul class=\"menu-sub-navigation nav flex-column\">\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/comparator']\">\n            <mat-icon class=\"icon\" svgIcon=\"components\"></mat-icon>\n            <span class=\"menu-item-title tables\">{{ t('Overview') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/description']\">\n            <mat-icon class=\"icon tables\" svgIcon=\"forms\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Description') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/selector']\">\n            <mat-icon class=\"icon\" svgIcon=\"utilities\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Sources') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/disamb']\">\n            <mat-icon class=\"icon\" svgIcon=\"tables\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Unification') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/analysis']\">\n            <mat-icon class=\"icon\" svgIcon=\"charts\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Analyses') }}</span>\n          </a>\n        </li>\n      </ul>\n    </mat-expansion-panel>\n  </li>\n</ul>\n<button type=\"button\" class=\"button-info  btn\" [disabled]=\"activeLanguage=='ru'\" (click)=\"setLang('ru')\">Русский</button>\n<button type=\"button\" class=\"button-info btn\" [disabled]=\"activeLanguage=='en'\" (click)=\"setLang('en')\">English</button>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: [\n    './styles/main-menu.component.scss'\n  ]\n})\nexport class MainMenuComponent implements OnInit {\n  availableLanguages\n  activeLanguage: string\n  constructor(private translocoService: TranslocoService) {\n  }\n  \n  ngOnInit() {\n    this.activeLanguage = this.translocoService.getActiveLang();\n    this.availableLanguages = this.translocoService.getAvailableLangs();\n    console.log(this.activeLanguage, this.availableLanguages)\n  }\n  setLang(lang){\n    this.translocoService.setActiveLang(lang);\n    this.activeLanguage = lang\n  }\n}","import { Component, Input, HostBinding } from '@angular/core';\r\n\r\nimport { AppShellConfig } from '../config/app-shell.config';\r\n\r\n@Component({\r\n  selector: 'cc-text-shell',\r\n  templateUrl: './text-shell.component.html',\r\n  styleUrls: [\r\n    './text-shell.component.scss',\r\n    // Partial styles\r\n    './partials/bouncing-animation.scss',\r\n    './partials/gradient-animation.scss'\r\n  ]\r\n})\r\nexport class TextShellComponent {\r\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\r\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  _data: '';\r\n\r\n  @HostBinding('class.text-loaded') textLoaded = false;\r\n\r\n  @Input() set data(val: any) {\r\n    if (!this.debugMode) {\r\n      this._data = (val !== undefined && val !== null) ? val : '';\r\n    }\r\n\r\n    if (this._data && this._data !== '') {\r\n      this.textLoaded = true;\r\n    } else {\r\n      this.textLoaded = false;\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","<ng-container>{{ _data }}</ng-container>\r\n","// import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}