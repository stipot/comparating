{"version":3,"sources":["./src/app/shared/file-uploader/file-uploader.directive.ts","./src/app/core/layouts/layouts.service.ts","./src/app/core/side-menus/side-menus.service.ts","./src/app/core/custom-icons/custom-icons.service.ts","./src/app/app-color-palettes.ts","./src/app/shell/image-shell/image-shell.component.ts","./src/app/shell/image-shell/image-shell.component.html","./src/app/core/layouts/mobile/mobile-layout.component.ts","./src/app/core/layouts/mobile/mobile-layout.component.html","./src/app/transloco-root.module.ts","./src/environments/environment.ts","./src/app/shell/aspect-ratio/aspect-ratio.component.ts","./src/app/shell/aspect-ratio/aspect-ratio.component.html","./src/app/shared/show-hide-password/show-hide-input.directive.ts","./src/app/core/responsive-breakpoints.service.ts","./src/app/core/side-navbar/side-navbar.component.ts","./src/app/core/side-navbar/side-navbar.component.html","./src/app/core/layouts/empty/empty-layout.component.ts","./src/app/core/layouts/empty/empty-layout.component.html","./src/app/core/top-navbar/top-navbar.component.html","./src/app/core/top-navbar/top-navbar.component.ts","./src/app/core/color-palettes/color-palettes.service.ts","./src/app/shell/config/app-shell.config.ts","./src/app/shared/notification-template/notification-template.component.ts","./src/app/shared/notification-template/notification-template.component.html","./src/app/shared/shared.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/layouts/dynamic/dynamic-layout.component.ts","./src/app/core/layouts/dynamic/dynamic-layout.component.html","./src/app/app-layouts.ts","./src/app/app.module.ts","./src/app/shell/shell.module.ts","./src/app/core/layouts/option-d/option-d-layout.component.ts","./src/app/core/layouts/option-d/option-d-layout.component.html","./src/app/shared/show-hide-password/show-hide-password.component.ts","./src/app/shared/show-hide-password/show-hide-password.component.html","./src/app/core/layouts/option-b/option-b-layout.component.ts","./src/app/core/layouts/option-b/option-b-layout.component.html","./src/app/core/layouts/option-c/option-c-layout.component.ts","./src/app/core/layouts/option-c/option-c-layout.component.html","./src/app/core/core.module.ts","./src/app/app-routing.module.ts","./src/app/shared/alert-template/alert-template.component.ts","./src/app/shared/alert-template/alert-template.component.html","./src/app/core/layouts/option-a/option-a-layout.component.ts","./src/app/core/layouts/option-a/option-a-layout.component.html","./src/app/core/side-menus/main-menu/main-menu.component.html","./src/app/core/side-menus/main-menu/main-menu.component.ts","./src/app/shell/text-shell/text-shell.component.ts","./src/app/shell/text-shell/text-shell.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Directive, EventEmitter, HostListener, Input, Output } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appFileUploader]'\r\n})\r\n\r\nexport class FileUploaderDirective {\r\n  background = '';\r\n  @Input() private allowedExtensions: Array<string> = [];\r\n  @Output() private filesChangeEmiter: EventEmitter<Array<File>> = new EventEmitter();\r\n  @Output() private filesInvalidEmiter: EventEmitter<Array<File>> = new EventEmitter();\r\n\r\n  @HostListener('drop', ['$event']) onDrop(e): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    const files = e.dataTransfer.files;\r\n    const validFiles: Array<File> = [];\r\n    const invalidFiles: Array<File> = [];\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const ext = file.name.split('.')[file.name.split('.').length - 1];\r\n        if (\r\n          (!this.allowedExtensions.length) ||\r\n          (this.allowedExtensions.lastIndexOf(ext) !== -1)\r\n        ) {\r\n          validFiles.push(file);\r\n        } else {\r\n          invalidFiles.push(file);\r\n        }\r\n      }\r\n      if (validFiles.length > 0) {\r\n        this.filesChangeEmiter.emit(validFiles);\r\n      }\r\n      if (invalidFiles.length > 0) {\r\n        this.filesInvalidEmiter.emit(invalidFiles);\r\n      }\r\n    }\r\n  }\r\n\r\n  @HostListener('dragover', ['$event']) onDragOver(e): void {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { defaultLayout, availableLayouts, IAppLayout } from 'src/app/app-layouts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LayoutsService {\n  previousLayout: IAppLayout = defaultLayout;\n  currentLayout: IAppLayout = defaultLayout;\n\n  public switchLayoutSubject: Subject<any> = new Subject();\n\n  constructor() { }\n\n  switchLayout(selectedLayoutName: string): void {\n    selectedLayoutName = (selectedLayoutName) ? selectedLayoutName : this.currentLayout.name;\n\n    if (selectedLayoutName && selectedLayoutName !== this.currentLayout.name) {\n      const selectedLayout: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n        return layout.name === selectedLayoutName;\n      });\n\n      if (selectedLayout) {\n        this.previousLayout = this.currentLayout;\n        this.currentLayout = selectedLayout;\n\n        this.switchLayoutSubject.next(selectedLayout.name);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SideMenusService {\n  public toggleMainMenuSubject: Subject<any> = new Subject();\n\n  public toggleAltMenuSubject: Subject<any> = new Subject();\n  public renderAltMenuSubject: Subject<any> = new Subject();\n\n  public changeMainMenuModeSubject: Subject<any> = new Subject();\n\n  constructor() { }\n}\n","import { Injectable } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomIconsService {\n\n  constructor(\n    private matIconRegistry: MatIconRegistry,\n    private domSanitizer: DomSanitizer\n  ) {}\n\n  init(): void {\n    // register custom icons\n    this.registerIcons(\n      ['comparating-logo-2', 'comparating-logo'], '/assets/icons/logos/');\n    this.registerIcons(\n      ['dashboards', 'forms', 'components', 'charts', 'tables', 'utilities'], '/assets/icons/sidemenu/');\n  }\n\n  registerIcons(icons: Array<string>, path: string) {\n    icons.forEach((icon) => {\n      this.matIconRegistry.addSvgIcon(\n        icon,\n        this.domSanitizer.bypassSecurityTrustResourceUrl(path + icon + '.svg')\n      );\n    });\n  }\n}\n","interface IPalette {\n  name: string;\n}\n\nconst availablePalettes: Array<IPalette> = [\n  {\n    name: 'palette-1'\n  },\n  {\n    name: 'palette-2'\n  }\n];\n\n// select the default color palette\nconst defaultPalette: IPalette = availablePalettes.find((palette: IPalette) => {\n  return palette.name === 'palette-1';\n});\n\nexport { IPalette, availablePalettes, defaultPalette };\n","import { Component, Input, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\r\nimport { isPlatformServer } from '@angular/common';\r\n\r\nimport { AppShellConfig } from '../config/app-shell.config';\r\n\r\n@Component({\r\n  selector: 'cc-image-shell',\r\n  templateUrl: './image-shell.component.html',\r\n  styleUrls: ['./image-shell.component.scss']\r\n})\r\nexport class ImageShellComponent {\r\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\r\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  _src = '';\r\n  // tslint:disable-next-line:variable-name\r\n  _alt = '';\r\n  // tslint:disable-next-line:variable-name\r\n  _mode = '';\r\n\r\n  @HostBinding('class.img-loaded') imageLoaded = false;\r\n\r\n  @HostBinding('style.backgroundImage') backgroundImage: string;\r\n\r\n  @HostBinding('attr.mode')\r\n  @Input()\r\n  set mode(val: string) {\r\n    this._mode = (val !== undefined && val !== null) ? val : '';\r\n  }\r\n  get mode(): string {\r\n    return this._mode;\r\n  }\r\n\r\n  @Input()\r\n  set src(val: string) {\r\n    if (!this.debugMode) {\r\n      this._src = (val !== undefined && val !== null) ? val : '';\r\n    }\r\n\r\n    if (this._mode === 'cover') {\r\n      // Unset the background-image\r\n      this.backgroundImage = 'unset';\r\n    }\r\n\r\n    // Show loading indicator\r\n    // When using SSR (Server Side Rendering), avoid the loading animation while the image resource is being loaded\r\n    if (isPlatformServer(this.platformId)) {\r\n      this.imageLoaded = true;\r\n    } else {\r\n      this.imageLoaded = false;\r\n    }\r\n  }\r\n\r\n  @Input()\r\n  set alt(val: string) {\r\n    this._alt = (val !== undefined && val !== null) ? val : '';\r\n  }\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId\r\n  ) {}\r\n\r\n  _imageLoaded() {\r\n    this.imageLoaded = true;\r\n\r\n    // If it's a cover image then set the background-image property accordingly\r\n    if (this._mode === 'cover') {\r\n      this.backgroundImage = 'url(' + this._src + ')';\r\n    }\r\n  }\r\n}\r\n","<i class=\"spinner fas fa-circle-notch fa-spin fa-3x fa-fw\"></i>\r\n<img class=\"inner-img\" [src]=\"_src\" [alt]=\"_alt\" (load)=\"_imageLoaded()\"/>\r\n<ng-content *ngIf=\"_mode === 'cover'\"></ng-content>\r\n","import { Component, OnInit, AfterViewInit, OnDestroy, HostBinding, ViewChild, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-mobile-layout',\n  templateUrl: './mobile-layout.component.html',\n  styleUrls: ['./mobile-layout.component.scss']\n})\nexport class MobileLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-mobile') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // Mobile layout main menu always starts closed and with 'push' mode\n    this.mainSidenavOpened = false;\n    this.mainSideMenuMode = 'push';\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('toggleMainMenu [Layout Mobile] - complete');\n      }\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('toggleAltMenu [Layout Mobile] - complete');\n      }\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout Mobile] - error', error);\n      },\n      () => {\n        console.log('changeMainMenuModeSubject [Layout Mobile] - complete');\n      }\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding\" mode=\"condensed\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { HttpClient } from '@angular/common/http';\nimport {\n  TRANSLOCO_LOADER,\n  Translation,\n  TranslocoLoader,\n  TRANSLOCO_CONFIG,\n  translocoConfig,\n  TranslocoModule\n} from '@ngneat/transloco';\nimport { Injectable, NgModule } from '@angular/core';\nimport { environment } from '../environments/environment';\n\n@Injectable({ providedIn: 'root' })\nexport class TranslocoHttpLoader implements TranslocoLoader {\n  constructor(private http: HttpClient) {}\n\n  getTranslation(lang: string) {\n    return this.http.get<Translation>(`${environment.baseUrl}/assets/i18n/${lang}.json`);\n  }\n}\n\n@NgModule({\n  exports: [ TranslocoModule ],\n  providers: [\n    {\n      provide: TRANSLOCO_CONFIG,\n      useValue: translocoConfig({\n        availableLangs: ['en','ru'],\n        defaultLang: 'ru',\n        // Remove this option if your application doesn't support changing language in runtime.\n        reRenderOnLangChange: true,\n        prodMode: environment.production,\n      })\n    },\n    { provide: TRANSLOCO_LOADER, useClass: TranslocoHttpLoader }\n  ]\n})\nexport class TranslocoRootModule {}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  baseUrl: './',\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, Input, HostBinding } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cc-aspect-ratio',\r\n  templateUrl: './aspect-ratio.component.html',\r\n  styleUrls: ['./aspect-ratio.component.scss']\r\n})\r\nexport class AspectRatioComponent {\r\n  @HostBinding('style.padding') ratioPadding = '0px';\r\n\r\n  @Input()\r\n  set ratio(ratio: { w: number, h: number }) {\r\n    ratio = (ratio !== undefined && ratio !== null) ? ratio : {w: 1, h: 1};\r\n\r\n    const heightRatio = (ratio.h / ratio.w * 100) + '%';\r\n\r\n    // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)\r\n    this.ratioPadding = '0px 0px ' + heightRatio + ' 0px';\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","<div class=\"content-wrapper\">\r\n  <ng-content></ng-content>\r\n</div>\r\n","import { Directive } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appShowHideInput]'\r\n})\r\nexport class ShowHideInputDirective {\r\n\r\n  constructor() {}\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { ReplaySubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiveBreakpointsService {\n  public screenSizeChangeSubject: ReplaySubject<any> = new ReplaySubject(1);\n  public currentScreenSize: string;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver\n  ) {\n    const isSmallScreen = this.breakpointObserver.isMatched(\n      [Breakpoints.XSmall, Breakpoints.Small]\n    );\n    const isMediumScreen = this.breakpointObserver.isMatched(\n      [Breakpoints.Medium]\n    );\n\n    this.currentScreenSize = (isSmallScreen) ? 'small' : (isMediumScreen) ? 'medium' : 'large';\n\n    // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n    this.breakpointObserver.observe([\n      Breakpoints.XSmall,\n      Breakpoints.Small,\n      Breakpoints.Medium,\n      Breakpoints.Large,\n      Breakpoints.XLarge\n    ]).subscribe(result => {\n      if (result.matches) {\n        if (result.breakpoints[Breakpoints.XSmall] || result.breakpoints[Breakpoints.Small]) {\n          this.screenSizeChangeSubject.next('small');\n        }\n\n        if (result.breakpoints[Breakpoints.Medium]) {\n          this.screenSizeChangeSubject.next('medium');\n        }\n\n        if (result.breakpoints[Breakpoints.Large] || result.breakpoints[Breakpoints.XLarge]) {\n          this.screenSizeChangeSubject.next('large');\n        }\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { SideMenusService } from '../side-menus/side-menus.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-side-navbar',\n  templateUrl: './side-navbar.component.html',\n  styleUrls: [\n    './styles/side-navbar.component.scss'\n  ]\n})\nexport class SideNavbarComponent implements OnInit {\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n  }\n\n  logout() {\n  }\n\n  toggleAltMenu(): void {\n    this.sideMenusService.toggleAltMenuSubject.next('toggle');\n  }\n\n  toggleSettingsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('settings');\n    this.toggleAltMenu();\n  }\n\n  toggleNotificationsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('notifications');\n    this.toggleAltMenu();\n  }\n\n  toggleSearchMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('search');\n    this.toggleAltMenu();\n  }\n}\n","<div class=\"navbar-branding\">\n  <mat-icon class=\"brand-logo\" svgIcon=\"comparating-logo\"></mat-icon>\n</div>\n<div class=\"navbar-actions\">\n  <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleSettingsMenu()\">\n    <mat-icon class=\"navbar-icons\" svgIcon=\"settings\"></mat-icon>\n  </button>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty-layout',\n  templateUrl: './empty-layout.component.html',\n  styleUrls: ['./empty-layout.component.scss']\n})\nexport class EmptyLayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<router-outlet></router-outlet>\n","<!-- Conditional template Outlet (see: https://stackoverflow.com/a/52448001/1116959) -->\n<ng-container *ngTemplateOutlet=\"(_mode === 'condensed') ? condensedToolbar : expandedToolbar;\">\n</ng-container>\n\n<ng-template #condensedToolbar>\n  <mat-toolbar class=\"top-navbar-toolbar\" *transloco=\"let t\">\n    <mat-toolbar-row>\n      <div class=\"navbar-branding\">\n        <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n          <i class=\"fa fa-bars\"></i>\n        </button>\n      </div>\n      <span class=\"navbar-title\">Comparating</span>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</ng-template>\n\n<ng-template #expandedToolbar>\n  <mat-toolbar class=\"top-navbar-toolbar\">\n    <mat-toolbar-row>\n      <div class=\"navbar-branding\">\n        <mat-icon class=\"brand-logo\" svgIcon=\"comparating-logo-2\"></mat-icon>\n        <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n          <i class=\"fa fa-bars\"></i>\n        </button>\n        <span class=\"navbar-title\">{{ 'title' | transloco}}</span>\n      </div>\n\n      <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleNotificationsMenu()\"></button>\n      <div class=\"navbar-controls\">\n        <div class=\"navbar-search d-none d-md-block\">\n          <button type=\"button\" class=\"action-button btn btn-link\" (click)=\"toggleNotificationsMenu()\"></button>\n        </div>\n      </div>\n    </mat-toolbar-row>\n  </mat-toolbar>\n</ng-template>","import { Component, OnInit, HostBinding, Input } from '@angular/core';\nimport { SideMenusService } from '../side-menus/side-menus.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-top-navbar',\n  templateUrl: './top-navbar.component.html',\n  styleUrls: [\n    './styles/top-navbar.component.scss'\n  ]\n})\nexport class TopNavbarComponent implements OnInit {\n\n  // tslint:disable-next-line:variable-name\n  _mode = 'expanded';\n\n  @HostBinding('attr.mode')\n  @Input()\n  set mode(val: string) {\n    this._mode = (val !== undefined && val !== null) ? val : 'expanded';\n  }\n  get mode(): string {\n    return this._mode;\n  }\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {}\n\n  logout() {\n  }\n\n  toggleMainMenu(): void {\n    this.sideMenusService.toggleMainMenuSubject.next('toggle');\n  }\n\n  toggleAltMenu(): void {\n    this.sideMenusService.toggleAltMenuSubject.next('toggle');\n  }\n\n  toggleSettingsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('settings');\n    this.toggleAltMenu();\n  }\n\n  toggleNotificationsMenu(): void {\n    this.sideMenusService.renderAltMenuSubject.next('notifications');\n    this.toggleAltMenu();\n  }\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { defaultPalette, IPalette, availablePalettes } from 'src/app/app-color-palettes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ColorPalettesService {\n  currentPalette: IPalette = defaultPalette;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  init(): void {\n    this.setPalette(defaultPalette.name);\n  }\n\n  setPalette(paletteName: string): void {\n    // Set default theme\n    const selectedPalette: IPalette = availablePalettes.find((palette: IPalette) => {\n      return palette.name === paletteName;\n    });\n\n    if (selectedPalette) {\n      const rootElement = this.document.documentElement;\n\n      if (rootElement) {\n        rootElement.setAttribute('color-palette', selectedPalette.name);\n      }\n\n      this.currentPalette = selectedPalette;\n    }\n  }\n}\n","// Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\r\nimport { Injectable, isDevMode } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { tap } from 'rxjs/operators';\r\nimport { IAppShellConfig } from './config.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppShellConfig {\r\n  static settings: IAppShellConfig;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  // Simplified version from: https://stackoverflow.com/a/49707898/1116959\r\n  load(): Promise<void | IAppShellConfig> {\r\n    const configFile = '/assets/config/app-shell.config' + ((!isDevMode()) ? '.prod' : '') + '.json';\r\n\r\n    return this.http.get<IAppShellConfig>(configFile).pipe(\r\n      tap(configSettings => {\r\n        AppShellConfig.settings = configSettings;\r\n      })\r\n    )\r\n    .toPromise()\r\n    .catch((error: any) => {\r\n      console.log(`Could not load file '${configFile}'`, error);\r\n    });\r\n  }\r\n}\r\n","import { Component, Inject, Input, OnInit, Optional } from '@angular/core';\r\nimport { MAT_SNACK_BAR_DATA, MatSnackBarRef } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-notification-template',\r\n  templateUrl: './notification-template.component.html',\r\n  styleUrls: ['./notification-template.component.scss']\r\n})\r\n\r\nexport class NotificationTemplateComponent implements OnInit {\r\n  @Input() message: string;\r\n  @Input() text: string;\r\n  @Input() icon: string;\r\n  @Input() type = false;\r\n  @Input() dismissible = false;\r\n\r\n  baseClass = 'notification alert';\r\n  classes = '';\r\n\r\n  /** The instance of the component making up the content of the snack bar. */\r\n  snackBarRef: MatSnackBarRef<NotificationTemplateComponent>;\r\n\r\n  constructor(@Optional() @Inject(MAT_SNACK_BAR_DATA) public data: any) {\r\n    if (data) {\r\n      this.message = data.message;\r\n      this.icon = data.icon;\r\n      this.type = data.type;\r\n      this.dismissible = data.dismissible;\r\n    }\r\n  }\r\n\r\n  /** Dismisses the snack bar. */\r\n  dismiss(): void {\r\n    if (this.snackBarRef) {\r\n      this.snackBarRef.dismiss();\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.classes = this.baseClass;\r\n    this.classes += (this.dismissible ? ' alert-dismissible' :  '');\r\n    this.classes += (this.type ? ' alert-' + this.type :  '');\r\n  }\r\n\r\n}\r\n","<ng-container>\r\n  <div class=\"custom-notification-wrapper\">\r\n    <div role=\"alert\" [ngClass]=\"classes\">\r\n      <i *ngIf=\"icon\" [ngClass]=\"'notification-icon fas fa-' + icon\"></i>\r\n      <span *ngIf=\"message\" class=\"notification-line\">{{ message }}</span>\r\n      <button type=\"button\" class=\"close\" *ngIf=\"dismissible\" (click)=\"dismiss()\">\r\n        <i class=\"fas fa-times\"></i>\r\n      </button>\r\n      <p *ngIf=\"text\" class=\"notification-text\">{{ text }}</p>\r\n    </div>\r\n  </div>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nimport {\r\n  NgbButtonsModule,\r\n  NgbProgressbarModule,\r\n  NgbDatepickerModule,\r\n  NgbRatingModule,\r\n  NgbTimepickerModule,\r\n  NgbPopoverModule,\r\n  NgbCarouselModule,\r\n  NgbTabsetModule,\r\n  NgbTypeaheadModule,\r\n  NgbDropdownModule\r\n} from '@ng-bootstrap/ng-bootstrap';\r\n\r\n// import { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { ShellModule } from '../shell/shell.module';\r\nimport { FileUploaderDirective } from './file-uploader/file-uploader.directive';\r\nimport { ShowHidePasswordComponent } from './show-hide-password/show-hide-password.component';\r\nimport { ShowHideInputDirective } from './show-hide-password/show-hide-input.directive';\r\nimport { AlertTemplateComponent } from './alert-template/alert-template.component';\r\nimport { NotificationTemplateComponent } from './notification-template/notification-template.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    FileUploaderDirective,\r\n    ShowHidePasswordComponent,\r\n    ShowHideInputDirective,\r\n    AlertTemplateComponent,\r\n    NotificationTemplateComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    ShellModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n    // HttpClientModule\r\n  ],\r\n  exports: [\r\n    // Re-export these modules to prevent repeated imports (see: https://angular.io/guide/ngmodule#re-exporting-other-modules)\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    // HttpClientModule,\r\n    ShellModule,\r\n    RouterModule,\r\n    FileUploaderDirective,\r\n    ShowHidePasswordComponent,\r\n    ShowHideInputDirective,\r\n    AlertTemplateComponent,\r\n    NotificationTemplateComponent,\r\n    // angular material modules\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatProgressBarModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatSelectModule,\r\n    MatStepperModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    MatButtonToggleModule,\r\n    MatSlideToggleModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatSliderModule,\r\n    MatIconModule,  // needed to use the MatIconRegistry to register our own icons\r\n    // ng bootstrap modules\r\n    NgbButtonsModule,\r\n    NgbProgressbarModule,\r\n    NgbDatepickerModule,\r\n    NgbRatingModule,\r\n    NgbTimepickerModule,\r\n    NgbPopoverModule,\r\n    NgbCarouselModule,\r\n    NgbTabsetModule,\r\n    NgbTypeaheadModule,\r\n    NgbDropdownModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, OnInit, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\n\nimport { LayoutsService } from './core/layouts/layouts.service';\nimport { translate, TranslocoService, Translation } from '@ngneat/transloco';\nimport { subscribeOn } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent implements OnInit {\n  title = 'comparating-template';\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    private breakpointObserver: BreakpointObserver,\n    private layoutsService: LayoutsService,\n  ) { }\n  ngOnInit() {\n    // Listen to device size changes to dynamically adjust the layout\n    if (isPlatformBrowser(this.platformId)) {\n      // Use Angular CDK Breakpoint Observer to detect changes on the screen size\n      this.breakpointObserver.observe([\n        Breakpoints.XSmall\n      ]).subscribe(result => {\n        if (result.breakpoints[Breakpoints.XSmall]) {\n          // Switch to mobile layout\n          const mobileLayoutName = 'mobile';\n          this.layoutsService.switchLayout(mobileLayoutName);\n        } else {\n          // Switch back to previous layout (or the default one)\n          const previousLayoutName = this.layoutsService.previousLayout.name;\n          this.layoutsService.switchLayout(previousLayoutName);\n        }\n      });\n    }\n  }\n}\n","<ng-container *transloco=\"let t\">\n<router-outlet></router-outlet>\n</ng-container>\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, Inject, PLATFORM_ID, Optional } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { TransferState, makeStateKey } from '@angular/platform-browser';\nimport { RESPONSE } from '@nguniversal/express-engine/tokens';\nimport { CdkPortalOutlet, Portal, ComponentPortal } from '@angular/cdk/portal';\nimport { Subscription } from 'rxjs';\n\nimport { LayoutsService } from '../layouts.service';\nimport { IAppLayout, availableLayouts, defaultLayout } from 'src/app/app-layouts';\n\nconst MOBILE_DEVICE = makeStateKey('mobile-device');\n\n@Component({\n  selector: 'app-dynamic-layout',\n  templateUrl: './dynamic-layout.component.html'\n})\nexport class DynamicLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  // dynamicLayoutPortalOutlet is a reference to the <ng-template> in the view that's gonna render the different layouts\n  @ViewChild(CdkPortalOutlet) dynamicLayoutPortalOutlet: CdkPortalOutlet;\n\n  // dynamicLayoutPortal is a reference to the portal that we are gonna render in the dynamicLayoutPortalOutlet\n  dynamicLayoutPortal: Portal<any>;\n\n  // Subscription to the Dynamic Layout switching mechanism\n  dynamicLayoutSwitchSubscription: Subscription;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: object,\n    @Optional() @Inject(RESPONSE) private response: any,\n    private state: TransferState,\n    private layoutsService: LayoutsService\n  ) {\n    // Check if the user is requesting the app from a mobile device\n    let mobileDevice = 'not-mobile';\n\n    // In our server.ts we added a custom response header with information about the device requesting the app\n    if (isPlatformServer(this.platformId)) {\n      if (this.response && this.response !== null) {\n        // Get custom header from the response sent from the server.ts\n        const mobileDeviceHeader = this.response.get('mobile-device');\n\n        // If the mobile-device header is not null, then the user is requesting the app from a mobile device. Override reference.\n        if (mobileDeviceHeader && mobileDeviceHeader !== 'null') {\n          mobileDevice = mobileDeviceHeader;\n        }\n      }\n\n      // Set the mobileDevice reference using Angular TransferState mechanisms so we can have this reference ready\n      // when the app transitions from server side rendering to client side rendering\n      this.state.set(MOBILE_DEVICE, mobileDevice as string);\n\n      console.log('we\\'re rendering from the server, checking response object.');\n      console.log(`MOBILE_DEVICE from RESPONSE: ${mobileDevice}`);\n    } else {\n      mobileDevice = this.state.get(MOBILE_DEVICE, mobileDevice as any);\n\n      console.log('we\\'re rendering from the browser, there is no response object.');\n      console.log(`MOBILE_DEVICE from TransferState: ${mobileDevice}`);\n    }\n\n    if (mobileDevice !== 'not-mobile') {\n      this.renderLayoutPortal('mobile');\n    } else {\n      this.renderLayoutPortal(defaultLayout.name);\n    }\n  }\n\n  ngOnInit() { }\n\n  ngOnDestroy() {\n    this.dynamicLayoutSwitchSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.dynamicLayoutSwitchSubscription = this.layoutsService.switchLayoutSubject.subscribe(\n      (selectedLayoutName) => {\n        this.renderLayoutPortal(selectedLayoutName);\n      },\n      (error) => {\n        console.log('switchLayoutSubject [DynamicLayoutComponent] - error', error);\n      },\n      () => {\n        console.log('switchLayoutSubject [DynamicLayoutComponent] - complete');\n      }\n    );\n  }\n\n  renderLayoutPortal(layoutName: string): void {\n    // Check if the layout we want to render exists. We check against the list defined in the src/app-layouts.ts file\n    const layoutToRender: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n      return layout.name === layoutName;\n    });\n\n    if (layoutToRender) {\n      this.dynamicLayoutPortal = new ComponentPortal(layoutToRender.component);\n    }\n  }\n}\n","<ng-template [cdkPortalOutlet]=\"dynamicLayoutPortal\"></ng-template>\n","import { Type } from '@angular/core';\n\nimport { OptionALayoutComponent } from './core/layouts/option-a/option-a-layout.component';\nimport { OptionBLayoutComponent } from './core/layouts/option-b/option-b-layout.component';\nimport { OptionCLayoutComponent } from './core/layouts/option-c/option-c-layout.component';\nimport { OptionDLayoutComponent } from './core/layouts/option-d/option-d-layout.component';\nimport { MobileLayoutComponent } from './core/layouts/mobile/mobile-layout.component';\n\ninterface IAppLayout {\n  name: string;\n  component: Type<any>;\n}\n\nconst availableLayouts: Array<IAppLayout> = [\n  {\n    name: 'A',\n    component: OptionALayoutComponent\n  },\n  {\n    name: 'B',\n    component: OptionBLayoutComponent\n  },\n  {\n    name: 'C',\n    component: OptionCLayoutComponent\n  },\n  {\n    name: 'D',\n    component: OptionDLayoutComponent\n  },\n  {\n    name: 'mobile',\n    component: MobileLayoutComponent\n  }\n];\n\n// Select the default layout\nconst defaultLayout: IAppLayout = availableLayouts.find((layout: IAppLayout) => {\n  return layout.name === 'B';\n});\n\nexport { IAppLayout, availableLayouts, defaultLayout };\n","import { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { CoreModule } from './core/core.module';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslocoRootModule } from './transloco-root.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    BrowserTransferStateModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n    CoreModule,\r\n    BrowserAnimationsModule,\r\n    TranslocoRootModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AspectRatioComponent } from './aspect-ratio/aspect-ratio.component';\r\nimport { ImageShellComponent } from './image-shell/image-shell.component';\r\nimport { TextShellComponent } from './text-shell/text-shell.component';\r\nimport { AppShellConfig } from './config/app-shell.config';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AspectRatioComponent,\r\n    ImageShellComponent,\r\n    TextShellComponent\r\n  ],\r\n  providers: [\r\n    // Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\r\n    {\r\n      provide: APP_INITIALIZER,\r\n      useFactory: (appShellConfig: AppShellConfig) => {\r\n        return () => appShellConfig.load();\r\n      },\r\n      deps: [AppShellConfig],\r\n      multi: true\r\n    }\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    AspectRatioComponent,\r\n    ImageShellComponent,\r\n    TextShellComponent\r\n  ]\r\n})\r\nexport class ShellModule { }\r\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-d-layout',\n  templateUrl: './option-d-layout.component.html',\n  styleUrls: ['./option-d-layout.component.scss']\n})\nexport class OptionDLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-d') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(platformId);\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout D] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout D] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout D] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  toggleMainMenu(): void {\n    this.sideMenusService.toggleMainMenuSubject.next('toggle');\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<!-- Multi sidenav layouts, see: https://github.com/angular/components/issues/1514#issuecomment-306778354 -->\n<mat-sidenav-container>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"start\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div class=\"layout-container\">\n      <div class=\"side-navbar-container\">\n        <app-side-navbar class=\"admin-side-navbar\"></app-side-navbar>\n      </div>\n      <div class=\"drawer-container\">\n        <mat-sidenav-container>\n          <mat-sidenav\n            class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n            #mainSidenav\n            [mode]=\"mainSideMenuMode\"\n            [opened]=\"mainSidenavOpened\"\n            position=\"start\"\n            (openedStart)=\"openedStart()\"\n            (openedChange)=\"mainSidenavToggled($event)\">\n            <app-main-menu class=\"use-active-item-dot-decoration\"></app-main-menu>\n          </mat-sidenav>\n          <mat-sidenav-content class=\"admin-main-content\">\n            <button class=\"btn toggle-sidenav-btn\" type=\"button\" (click)=\"toggleMainMenu()\">\n              <i class=\"fa fa-bars\"></i>\n            </button>\n            <router-outlet></router-outlet>\n          </mat-sidenav-content>\n        </mat-sidenav-container>\n      </div>\n    </div>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, ContentChild, ElementRef } from '@angular/core';\r\nimport { ShowHideInputDirective } from './show-hide-input.directive';\r\n\r\n@Component({\r\n  selector: 'app-show-hide-password',\r\n  templateUrl: './show-hide-password.component.html',\r\n  styleUrls: ['./show-hide-password.component.scss']\r\n})\r\nexport class ShowHidePasswordComponent {\r\n\r\n  show = false;\r\n  @ContentChild(ShowHideInputDirective, { read: ElementRef }) input: ElementRef;\r\n\r\n  constructor() {}\r\n\r\n  toggleShow() {\r\n    this.show = !this.show;\r\n    if (this.show) {\r\n      this.input.nativeElement.type = 'text';\r\n    } else {\r\n      this.input.nativeElement.type = 'password';\r\n    }\r\n  }\r\n\r\n}\r\n","<ng-content></ng-content>\r\n<a class=\"type-toggle\" (click)=\"toggleShow()\">\r\n\t<i class=\"fas fa-eye show-option\" [hidden]=\"show\"></i>\r\n\t<i class=\"fas fa-eye-slash hide-option\" [hidden]=\"!show\"></i>\r\n  <!-- In case you want to use text instead of icons -->\r\n\t<!--\r\n  <span class=\"show-option\" [hidden]=\"show\">show</span>\r\n\t<span class=\"hide-option\" [hidden]=\"!show\">hide</span>\r\n  -->\r\n</a>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy, HostBinding, Inject, PLATFORM_ID } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-b-layout',\n  templateUrl: './option-b-layout.component.html',\n  styleUrls: ['./option-b-layout.component.scss']\n})\nexport class OptionBLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-b') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout B] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout B] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout B] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding add-user-divider\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { Component, OnInit, ViewChild, AfterViewInit, OnDestroy, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-c-layout',\n  templateUrl: './option-c-layout.component.html',\n  styleUrls: ['./option-c-layout.component.scss']\n})\nexport class OptionCLayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-c') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout C] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout C] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout C] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  // For the closing event, just wait until is fully closed and the animation ended\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"show-branding use-active-item-line-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <app-top-navbar class=\"admin-top-navbar show-bare-branding add-user-divider\"></app-top-navbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","import { NgModule, APP_INITIALIZER } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from '../shared/shared.module';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { RouterModule } from '@angular/router';\n// Items inside Side Menu\nimport { MatExpansionModule } from '@angular/material/expansion';\n// Side Menu\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\nimport { PortalModule } from '@angular/cdk/portal';\n\n// Top Navbar\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { OptionALayoutComponent } from './layouts/option-a/option-a-layout.component';\nimport { OptionBLayoutComponent } from './layouts/option-b/option-b-layout.component';\nimport { OptionCLayoutComponent } from './layouts/option-c/option-c-layout.component';\nimport { OptionDLayoutComponent } from './layouts/option-d/option-d-layout.component';\nimport { EmptyLayoutComponent } from './layouts/empty/empty-layout.component';\n\nimport { TopNavbarComponent } from './top-navbar/top-navbar.component';\nimport { SideNavbarComponent } from './side-navbar/side-navbar.component';\nimport { MainMenuComponent } from './side-menus/main-menu/main-menu.component';\n\nimport { ColorPalettesService } from './color-palettes/color-palettes.service';\nimport { CustomIconsService } from './custom-icons/custom-icons.service';\nimport { MobileLayoutComponent } from './layouts/mobile/mobile-layout.component';\nimport { DynamicLayoutComponent } from './layouts/dynamic/dynamic-layout.component';\nimport { TranslocoRootModule } from '../transloco-root.module';\n\n@NgModule({\n  declarations: [\n    OptionALayoutComponent,\n    OptionBLayoutComponent,\n    OptionCLayoutComponent,\n    OptionDLayoutComponent,\n    EmptyLayoutComponent,\n    TopNavbarComponent,\n    SideNavbarComponent,\n    MainMenuComponent,\n\n    MobileLayoutComponent,\n    DynamicLayoutComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    SharedModule,\n    // Material CDK modules\n    PortalModule,\n    // To detect screen size changes\n    LayoutModule,\n    // Material modules\n    MatSidenavModule,\n    MatExpansionModule,\n    // Ng Bootstrap modules\n    NgbDropdownModule,\n    TranslocoRootModule\n  ],\n  exports: [\n    OptionALayoutComponent,\n    OptionBLayoutComponent,\n    OptionCLayoutComponent,\n    OptionDLayoutComponent,\n    EmptyLayoutComponent,\n    TopNavbarComponent,\n    SideNavbarComponent,\n    MainMenuComponent,\n    MobileLayoutComponent,\n    DynamicLayoutComponent\n  ],\n  providers: [\n    // Inspired in: https://devblogs.microsoft.com/premier-developer/angular-how-to-editable-config-files/\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (colorPalettesService: ColorPalettesService) => {\n        return () => colorPalettesService.init();\n      },\n      deps: [ColorPalettesService],\n      multi: true\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: (customIconsService: CustomIconsService) => {\n        return () => customIconsService.init();\n      },\n      deps: [CustomIconsService],\n      multi: true\n    }\n  ]\n})\nexport class CoreModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\n\nimport { EmptyLayoutComponent } from './core/layouts/empty/empty-layout.component';\nimport { DynamicLayoutComponent } from './core/layouts/dynamic/dynamic-layout.component';\n\nconst routes: Routes = [\n  /*\n    Default route\n  */\n  { path: '', redirectTo: '/comparator', pathMatch: 'full' },\n  /*\n    Main routes + dynamic layouts\n  */\n  {\n    path: '',\n    component: DynamicLayoutComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./dashboards/dashboards.module').then(m => m.DashboardsModule)\n      }\n    ]\n  },\n  /*\n    Undefined routes (should redirect to a 404 page)\n  */\n  { path: '**', redirectTo: '/comparator' }\n];\n\n@NgModule({\n  // Only call RouterModule.forRoot() in the root AppRoutingModule (or the AppModule if that's where you register\n  // top level application routes). In any other module, you must call the RouterModule.forChild method to register additional routes.\n  imports: [\n    RouterModule.forRoot(routes, {\n    // If you want to preload all lazy routes when the app loads, uncomment the following line\n    // preloadingStrategy: PreloadAllModules,\n    onSameUrlNavigation: 'reload',\n    // This value is required for server-side rendering to work.\n    initialNavigation: 'enabled',\n    relativeLinkResolution: 'legacy'\n})\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-alert-template-component',\r\n  templateUrl: 'alert-template.component.html',\r\n  styleUrls: ['./alert-template.component.scss']\r\n})\r\nexport class AlertTemplateComponent {\r\n  iconType: string;\r\n  iconPosition: string;\r\n  title: string;\r\n  text: string;\r\n  options: false;\r\n  input: false;\r\n  button: string;\r\n  inputData: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AlertTemplateComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    this.iconType = data.iconType;\r\n    this.iconPosition = data.iconPosition ? data.iconPosition : 'default';\r\n    this.title = data.title;\r\n    this.text = data.text;\r\n    this.options = data.options;\r\n    this.input = data.input;\r\n    this.button = data.button;\r\n\r\n    if (data.time) {\r\n      setTimeout(() => {\r\n        this.dialogRef.close();\r\n      }, data.time);\r\n    }\r\n  }\r\n}\r\n","<div class=\"alert-modal\">\r\n\r\n  <div *ngIf=\"iconType\" class=\"icon-container-wrapper\">\r\n    <cc-aspect-ratio [ratio]=\"{w:1, h:1}\" class=\"icon-background\" [ngClass]=\"iconType + ' icon-' + iconPosition\">\r\n      <div class=\"icon-container\">\r\n        <i *ngIf=\"iconType === 'success'\" class=\"fas fa-check alert-icon icon-success\"></i>\r\n        <i *ngIf=\"iconType === 'error'\" class=\"fas fa-exclamation alert-icon icon-error\"></i>\r\n      </div>\r\n    </cc-aspect-ratio>\r\n  </div>\r\n\r\n  <span class=\"alert-title\">{{ title }}</span>\r\n  <span class=\"alert-text\">{{ text }}</span>\r\n\r\n  <div *ngIf=\"input\" class=\"alert-with-input\">\r\n    <input class=\"form-control\" [(ngModel)]=\"inputData\">\r\n    <div class=\"alert-buttons\" *ngIf=\"input\">\r\n      <button type=\"button\" class=\"button-success\" [mat-dialog-close]=\"inputData\">Confirm</button>\r\n      <button type=\"button\" class=\"button-error\" [mat-dialog-close]=\"false\">Cancel</button>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"!input && options\" class=\"alert-buttons\">\r\n    <button type=\"button\" class=\"button-success\" [mat-dialog-close]=\"true\">Yes</button>\r\n    <button type=\"button\" class=\"button-error\" [mat-dialog-close]=\"false\">No</button>\r\n  </div>\r\n\r\n  <div *ngIf=\"!input && !options && button\" class=\"alert-buttons\">\r\n    <button type=\"button\" class=\"button-info\" [mat-dialog-close]=\"false\">{{ button }}</button>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Subscription } from 'rxjs';\nimport { delay } from 'rxjs/operators';\n\nimport { ResponsiveBreakpointsService } from '../../responsive-breakpoints.service';\nimport { SideMenusService } from '../../side-menus/side-menus.service';\n\n@Component({\n  selector: 'app-option-a-layout',\n  templateUrl: './option-a-layout.component.html',\n  styleUrls: ['./option-a-layout.component.scss']\n})\nexport class OptionALayoutComponent implements OnInit, AfterViewInit, OnDestroy {\n  @HostBinding('class.layout-a') layoutFlag = true;\n  @HostBinding('class.server-side-rendered') serverSideRendered;\n  @HostBinding('class.main-sidenav-opened') mainSidenavOpened;\n  @HostBinding('class.alt-sidenav-opened') altSidenavOpened;\n\n  @ViewChild('mainSidenav') mainSidenav: MatSidenav;\n  @ViewChild('altSidenav') altSidenav: MatSidenav;\n\n  // Subscription to the Main Sidenav movement\n  mainSidenavSubscription: Subscription;\n  // Subscription to the Alt Sidenav movement\n  altSidenavSubscription: Subscription;\n  // Subscription to the screen size changes\n  screenSizeChangeSubscription: Subscription;\n  // Subscription to the main side menu mode changes\n  changeMainMenuModeSubscription: Subscription;\n\n  mainSideMenuMode: string;\n\n  constructor(\n    private sideMenusService: SideMenusService,\n    private responsiveBreakpointsService: ResponsiveBreakpointsService,\n    @Inject(PLATFORM_ID) private platformId: object\n  ) {\n    this.serverSideRendered = isPlatformServer(this.platformId);\n\n    // main menu initialization\n    switch (this.responsiveBreakpointsService.currentScreenSize) {\n      case 'small':\n        this.mainSidenavOpened = false;\n        this.mainSideMenuMode = 'push';\n        break;\n      case 'medium':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      case 'large':\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n        break;\n      default:\n        this.mainSidenavOpened = true;\n        this.mainSideMenuMode = 'side';\n    }\n  }\n\n  ngOnInit() {\n    // subscribe to screen size changes\n    this.screenSizeChangeSubscription = this.responsiveBreakpointsService.screenSizeChangeSubject.pipe(\n      delay(0)\n    ).subscribe(\n      (event) => {\n        if (event === 'small') {\n          this.sideMenusService.changeMainMenuModeSubject.next('push');\n          this.sideMenusService.toggleMainMenuSubject.next('close');\n        }\n        if (event === 'medium') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n        if (event === 'large') {\n          this.sideMenusService.changeMainMenuModeSubject.next('side');\n          this.sideMenusService.toggleMainMenuSubject.next('open');\n        }\n      }\n    );\n  }\n\n  ngOnDestroy() {\n    this.mainSidenavSubscription.unsubscribe();\n    this.altSidenavSubscription.unsubscribe();\n    this.screenSizeChangeSubscription.unsubscribe();\n    this.changeMainMenuModeSubscription.unsubscribe();\n  }\n\n  ngAfterViewInit(): void {\n    this.mainSidenavSubscription = this.sideMenusService.toggleMainMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.mainSidenav.toggle();\n            break;\n          case 'open':\n            this.mainSidenav.open();\n            break;\n          case 'close':\n            this.mainSidenav.close();\n            break;\n          default:\n            this.mainSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleMainMenu [Layout A] - error', error);\n      },\n      () => {}\n    );\n\n    this.altSidenavSubscription = this.sideMenusService.toggleAltMenuSubject.subscribe(\n      (event) => {\n        switch (event) {\n          case 'toggle':\n            this.altSidenav.toggle();\n            break;\n          case 'open':\n            this.altSidenav.open();\n            break;\n          case 'close':\n            this.altSidenav.close();\n            break;\n          default:\n            this.altSidenav.toggle();\n        }\n      },\n      (error) => {\n        console.log('toggleAltMenu [Layout A] - error', error);\n      },\n      () => {}\n    );\n\n    this.changeMainMenuModeSubscription = this.sideMenusService.changeMainMenuModeSubject.subscribe(\n      (menuMode) => {\n        this.mainSideMenuMode = menuMode;\n      },\n      (error) => {\n        console.log('changeMainMenuModeSubject [Layout B] - error', error);\n      },\n      () => {}\n    );\n  }\n\n  // It's better to have the class applied when the opening starts as we want it ready before the opening animation ends\n  openedStart(): void {\n    this.mainSidenavOpened = true;\n  }\n\n  mainSidenavToggled(opened: boolean): void {\n    this.mainSidenavOpened = opened;\n  }\n\n  altSidenavToggled(opened: boolean): void {\n    this.altSidenavOpened = opened;\n  }\n}\n","<app-top-navbar class=\"admin-top-navbar show-full-branding add-actions-divider\"></app-top-navbar>\n<mat-sidenav-container>\n  <mat-sidenav\n    class=\"admin-main-sidenav fixed-sidenav clear-sidenav-background\"\n    #mainSidenav\n    [mode]=\"mainSideMenuMode\"\n    [opened]=\"mainSidenavOpened\"\n    position=\"start\"\n    (openedStart)=\"openedStart()\"\n    (openedChange)=\"mainSidenavToggled($event)\">\n    <app-main-menu class=\"use-active-item-dot-decoration\"></app-main-menu>\n  </mat-sidenav>\n  <mat-sidenav-content class=\"admin-main-content\">\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n  <mat-sidenav class=\"admin-alt-sidenav fixed-sidenav\" #altSidenav mode=\"over\" opened=\"false\" position=\"end\" (openedChange)=\"altSidenavToggled($event)\">\n  </mat-sidenav>\n</mat-sidenav-container>\n","<ng-container *transloco=\"let t\">\n<div class=\"side-menu-branding\">\n  <mat-icon class=\"brand-logo\" svgIcon=\"comparating-logo\"></mat-icon>\n  <span class=\"menu-item-title\">Comparating</span>\n</div>\n<ul class=\"side-menu-navigation nav flex-column\">\n  <li class=\"menu-item expandable-item nav-item\" [routerLinkActive]=\"['active']\">\n    <mat-expansion-panel [expanded]=\"true\">\n      <mat-expansion-panel-header class=\"menu-link\">\n        <div class=\"item-header-content\">\n          <mat-panel-title>\n            <mat-icon class=\"menu-item-icon\" svgIcon=\"dashboards\"></mat-icon>\n            <span class=\"menu-item-title\">\n              {{ t('dashboard') }}</span>\n          </mat-panel-title>\n        </div>\n      </mat-expansion-panel-header>\n      <ul class=\"menu-sub-navigation nav flex-column\">\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/comparator']\">\n            <mat-icon class=\"icon\" svgIcon=\"components\"></mat-icon>\n            <span class=\"menu-item-title tables\">{{ t('Overview') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/description']\">\n            <mat-icon class=\"icon tables\" svgIcon=\"forms\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Description') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/selector']\">\n            <mat-icon class=\"icon\" svgIcon=\"utilities\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Sources') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/disamb']\">\n            <mat-icon class=\"icon\" svgIcon=\"tables\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Unification') }}</span>\n          </a>\n        </li>\n        <li class=\"menu-item nav-item\" [routerLinkActive]=\"['active']\">\n          <a class=\"menu-link nav-link\" [routerLinkActive]=\"['active']\" [routerLink]=\"['/analysis']\">\n            <mat-icon class=\"icon\" svgIcon=\"charts\"></mat-icon>\n            <span class=\"menu-item-title\">{{ t('Analyses') }}</span>\n          </a>\n        </li>\n      </ul>\n    </mat-expansion-panel>\n  </li>\n</ul>\n<button type=\"button\" class=\"button-info  btn\" [disabled]=\"activeLanguage=='ru'\" (click)=\"setLang('ru')\">Русский</button>\n<button type=\"button\" class=\"button-info btn\" [disabled]=\"activeLanguage=='en'\" (click)=\"setLang('en')\">English</button>\n</ng-container>","import { Component, OnInit } from '@angular/core';\nimport { TranslocoService } from '@ngneat/transloco';\n\n@Component({\n  selector: 'app-main-menu',\n  templateUrl: './main-menu.component.html',\n  styleUrls: [\n    './styles/main-menu.component.scss'\n  ]\n})\nexport class MainMenuComponent implements OnInit {\n  availableLanguages\n  activeLanguage: string\n  constructor(private translocoService: TranslocoService) {\n  }\n  \n  ngOnInit() {\n    this.activeLanguage = this.translocoService.getActiveLang();\n    this.availableLanguages = this.translocoService.getAvailableLangs();\n    console.log(this.activeLanguage, this.availableLanguages)\n  }\n  setLang(lang){\n    this.translocoService.setActiveLang(lang);\n    this.activeLanguage = lang\n  }\n}","import { Component, Input, HostBinding } from '@angular/core';\r\n\r\nimport { AppShellConfig } from '../config/app-shell.config';\r\n\r\n@Component({\r\n  selector: 'cc-text-shell',\r\n  templateUrl: './text-shell.component.html',\r\n  styleUrls: [\r\n    './text-shell.component.scss',\r\n    // Partial styles\r\n    './partials/bouncing-animation.scss',\r\n    './partials/gradient-animation.scss'\r\n  ]\r\n})\r\nexport class TextShellComponent {\r\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\r\n  private debugMode = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\r\n\r\n  // tslint:disable-next-line:variable-name\r\n  _data: '';\r\n\r\n  @HostBinding('class.text-loaded') textLoaded = false;\r\n\r\n  @Input() set data(val: any) {\r\n    if (!this.debugMode) {\r\n      this._data = (val !== undefined && val !== null) ? val : '';\r\n    }\r\n\r\n    if (this._data && this._data !== '') {\r\n      this.textLoaded = true;\r\n    } else {\r\n      this.textLoaded = false;\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n}\r\n","<ng-container>{{ _data }}</ng-container>\r\n","// import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n});\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}